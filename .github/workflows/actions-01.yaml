--- 
jobs: 
  app: 
    name: app
    needs: infra
    runs-on: ubuntu-latest
    steps: 
      - 
        name: "install helm"
        run: |
            wget https://get.helm.sh/helm-v3.0.2-linux-amd64.tar.gz
            tar -zxvf helm-v3.0.2-linux-amd64.tar.gz
            sudo mv linux-amd64/helm /usr/local/bin/helm
            helm help
  infra: 
    name: Infra
    runs-on: ubuntu-latest
    steps: 
      - 
        name: Checkout
        uses: actions/checkout@v3
      - 
        name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v1
        with: 
          cli_config_credentials_token: "${{ secrets.TF_API_TOKEN }}"
      - 
        id: fmt
        name: "Terraform Format"
        run: "terraform fmt -check"
      - 
        id: get
        name: "Terraform Get"
        run: "terraform get"
      - 
        id: init
        name: "Terraform Init"
        run: "terraform init -upgrade"
      - 
        id: validate
        name: "Terraform Validate"
        run: "terraform validate -no-color"
      - 
        continue-on-error: true
        id: plan
        if: "github.event_name == 'pull_request'"
        name: "Terraform Plan"
        run: "terraform plan -no-color -input=false"
      - 
        env: 
          PLAN: |-
              terraform
              ${{ steps.plan.outputs.stdout }}
        if: "github.event_name == 'pull_request'"
        uses: actions/github-script@v6
        with: 
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
              const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
              #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
              #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
              #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
              <details><summary>Show Plan</summary>
              \`\`\`\n
              ${process.env.PLAN}
              \`\`\`
              </details>
              *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
      - 
        if: "steps.plan.outcome == 'failure'"
        name: "Terraform Plan Status"
        run: "exit 1"
      - 
        if: "github.ref == 'refs/heads/main' && github.event_name == 'push'"
        name: "Terraform Apply"
        run: "terraform apply -auto-approve -input=false"
name: Actions-01
true: 
  pull_request: ~
  push: 
    branches: 
      - main

